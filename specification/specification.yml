openapi: '3.0.1'
info:
  title:  API  сервер для проекта Шесть городов
  description: Cервис для путешественников, не желающих переплачивать за аренду жилья
  contact:
    name: API Support
    url: https://www.example.com/support
    email: support@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
servers:
  - url: https://www.example.com/support
    description: Development server

tags:
  - name: offers
    description: Действия с предложениями по аренде
  - name: favorites
    description: Действия  с  избранными  предложениями
  - name: premium
    description: Действия с премиальными предложениями
  - name: users
    description: Действия c пользователями
  - name: comments
    description: Действия с комментариями


paths:
  /offers:
    get:
      tags:
        - offers
      summary:  Получение списка предложений по аренде
      description: Возвращает не больше 60 предложений по аренде
      parameters:
        - name: limit
          in: query
          description: limit
          schema:
            type: number

      responses:
        200:
          description: Список предложений по аренде.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'


  /offers/{offerId}/:
    get:
      tags:
        - offers
      summary: Получение детальной информации по предложению
      description:  Возвращает предложение с уникальным идентификатором offerId

      responses:
        200:
          description: Список предложений по аренде.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        401:
          description: Срок действия токена истек.

    post:
      tags:
        - offers
      summary: Создание нового предложения
      description:  Отправляет  предложение с уникальным идентификатором offerId

      parameters:
        - name: token
          in: header
          description: 'Token (формат: JWT + "token")'
          required: true
          schema:
            type: string

      requestBody:
        description: Информация для создания нового предложения.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'
        required: true

      responses:
        201:
          description: Создание нового предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        401:
          description: Срок действия токена истек.

    patch:
      tags:
        - offers
      summary: Редактирование предложения по аренде
      description:  Отправляет отредактирование предложение offerId
      parameters:
        - name: token
          in: header
          description: 'Token (формат: JWT + "token")'
          required: true
          schema:
            type: string

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'
        required: true

      responses:
        201:
          description: Редактирование предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        401:
          description: Срок действия токена истек.

    delete:
      tags:
        - offers
      summary: Удаление предложения по аренде
      description:  Удаляет предложение с уникальным идентификатором offerId

      parameters:
        - name: token
          in: header
          description: 'Token (формат: JWT + "token")'
          required: true
          schema:
            type: string

      responses:
        204:
          description: Удаление предложения по аренде.
          content:
            application/json:
              schema:
                type: object
        401:
          description: Срок действия токена истек.

  /favorites:
    get:
      tags:
        - favorites
      summary:  Список избранных предложений
      description: Возвращает все предложения, добавленные в избранное

      parameters:
        - name: limit
          in: query
          description: limit
          schema:
            type: number

      responses:
        200:
          description: Список предложений по аренде.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'

  /favorites/offerId/{status}:
    post:
      tags:
        - favorites
      summary: Добавление предложения в избранное
      description:  Добавляет любое предложения в список избранных предложений

      parameters:
        - name: token
          in: header
          description: 'Token (формат: JWT + "token")'
          required: true
          schema:
            type: string

      requestBody:
        description: Добавление предложения в избранное
        content:
          application/json:
            schema:
              type: object
              properties:
                isFavorite:
                  type: boolean
                  example: false
        required: true

      responses:
        200:
          description: Добавление  избранного открытого набора данных для пользователя.
          content:
            application/json:
              schema:
                type: object
        401:
          description: Срок действия токена истекы

    delete:
      tags:
        - favorites
      summary: Удаляет предложения в избранное
      description:  Удаляет  любое предложения в список избранных предложений

      parameters:
        - name: token
          in: header
          description: 'Token (формат: JWT + "token")'
          required: true
          schema:
            type: string

      responses:
        200:
          description: Удаление избранного открытого набора данных для пользователя.
          content:
            application/json:
              schema:
                type: object
        401:
          description: Срок действия токена истекы

  /premium:
    get:
      tags:
        - premium
      summary:   Премиальные предложения для города
      description: Возвращает не больше 3 предложений с флагом «Premium»

      parameters:
        - name: limit
          in: query
          description: limit
          schema:
            type: number

      responses:
        200:
          description: Список предложений по аренде.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'

  /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Получение cписка комментариев для предложения
      description:  Получения списка комментариев для определённого предложения
      responses:
        200:
          description: Список комментариев для предложения.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'
    post:
      tags:
        - comments/{offerId}
      summary: Добавление комментария
      description: Добавления комментариев к определённому предложению по аренде

      parameters:
        - name: token
          in: header
          description: 'Token (формат: JWT + "token")'
          required: true
          schema:
            type: string

      requestBody:
        description: Добавление комментария.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
        required: true

      responses:
        201:
          description: Добавление комментария.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
        401:
          description: Срок действия токена истек

  /users/register:
    post:
      tags:
        - users
      summary: Создание нового пользователя
      description: Регистрациянового пользователя

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        201:
          description: Пользователь зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        409:
          description: Пользователь с таким email уже существует

  /users/login:
    post:
      tags:
          - users
      summary:  Авторизация пользователя
      description:  Вход в закрытую часть приложения

      requestBody:
        description: Информация для входа в закрытую часть приложения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authUser'

      responses:
        200:
          description: Пользователь авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
        401:
          description: Непрвильный логин или пароль. Или такой пользователь не существует
    get:
      tags:
          - users
      summary:  Проверка состояния пользователя
      description:  Если клиент авторизован, сервис возвращает соответствующий код состояния и информацию о пользователе

      parameters:
        - name: token
          in: header
          description: 'Token (формат: JWT + "token")'
          required: true
          schema:
            type: string

      responses:
        200:
          description: Проверка авторизаций пройдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        401:
          description: Срок действия токена исте

  /users/logout:
    delete:
      tags:
        - users
      summary:   Выход из закрытой части приложения
      description:   Ресурс доступен только авторизованным клиентам

      responses:
        '201':
          description: Cервис завершает пользовательский сеанс (сессию).
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Срок действия токена истек

  /users/{userId}/avatar:
      post:
        tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение
        аватара должно быть в формате `png` или `jpg`.

#COMPONENTS
components:
  schemas:
    authUser:
      type: object

      properties:
        email:
          type: string
          example: zholud.artem@gmail.com

        password:
          type: string
          example: sadfscvkwer2324324SDWE3_$

    user:
      type: object

      properties:
        id:
          type: string
          example: 123dfdg34kfdsklfew423432

        author:
          type: string
          example: Натали Эрбет
        avatar:
          type: string
          example: example-path-to-img.png

        status:
          type: string
          enum:
            - usual
            - pro
          example: pro

    createUser:
      type: object

      properties:
        email:
          type: string
          example: zholud.artem@gmail.com

        author:
          type: string
          example: Натали Эрбет

        password:
          type: string
          example: zdDwe34x_fdl234

    token:
      type: object

      properties:
        token:
          type: string
          example: tokenAuthorization

#OFFERS

    offer:
      type: object

      properties:
        name:
          type: string
          example: name

        desription:
          type: string
          example: desription

        date:
          type: string
          example: 2024-01-02T11:55:41.283Z
          format: date

        city:
          type: string
          example: Paris
          enum:
            - Paris
            - Cologne
            - Brussels
            - Amsterdam
            - Hamburg
            - Dusseldorf

        prevImg:
          type: string
          example: example-path-to-img.png

        photos:
          type: array
          example:
            - example-path-to-img.png,
            - example-path-to-img.png,
            - example-path-to-img.png,
            - example-path-to-img.png,
            - example-path-to-img.png,
            - example-path-to-img.png,

        isPremium:
          type: boolean
          example: true

        isFavorite:
          type: boolean
          example: false

        rating:
          type: number
          example: 4.3

        flat:
          type: string
          example: Paris
          enum:
            - apartment
            - house
            - room
            - hotel

        rooms:
          type: number
          example: 2

        adult:
          type: number
          example: 2

        price:
          type: number
          example: 1234

        inside:
          type: array
          example:
            - Baby seat
            - Washer
            - Towels
          enum:
            - Breakfast
            - Air conditioning
            - Laptop friendly workspace
            - Baby seat
            - Washer
            - Towels
            - Fridge

        latitude:
          type: number
          example: 48.85661

        longitude:
          type: number
          example: 2.351499

        comment:
          type: number
          example: 13

    createOffer:
      type: object

      properties:
        name:
          type: string
          example: name

        desription:
          type: string
          example: desription

        date:
          type: string
          example: 2024-01-02T11:55:41.283Z
          format: date

        city:
          type: string
          example: Paris
          enum:
            - Paris
            - Cologne
            - Brussels
            - Amsterdam
            - Hamburg
            - Dusseldorf

        prevImg:
          type: string
          example: example-path-to-img.png

        photos:
          type: array
          example:
            - example-path-to-img.png,
            - example-path-to-img.png,
            - example-path-to-img.png,
            - example-path-to-img.png,
            - example-path-to-img.png,
            - example-path-to-img.png,

        isPremium:
          type: boolean
          example: true

        isFavorite:
          type: boolean
          example: false

        rating:
          type: number
          example: 4.3

        flat:
          type: string
          example: Paris
          enum:
            - apartment
            - house
            - room
            - hotel

        rooms:
          type: number
          example: 2

        adult:
          type: number
          example: 2

        price:
          type: number
          example: 1234

        inside:
          type: array
          example:
            - Baby seat
            - Washer
            - Towels
          enum:
            - Breakfast
            - Air conditioning
            - Laptop friendly workspace
            - Baby seat
            - Washer
            - Towels
            - Fridge

        latitude:
          type: number
          example: 48.85661

        longitude:
          type: number
          example: 2.351499

        comment:
          type: number
          example: 13

        userId:
          type: string
          example: 1231234sdfzxfgwer123fg34

#COMMENTS

    comment:
      type: object

      properties:
        description:
          type: string
          example: description

        rating:
          type: number
          example: 3.5

        userId:
          type: string
          example: 1231234sdfzxfgwer123fg34








